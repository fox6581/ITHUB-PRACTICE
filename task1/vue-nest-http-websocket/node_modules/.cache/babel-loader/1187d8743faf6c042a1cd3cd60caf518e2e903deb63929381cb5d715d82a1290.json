{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"disabled\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"href\"];\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_7 = {\n  key: 1\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_11 = [\"href\"];\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1);\nconst _hoisted_14 = {\n  key: 0\n};\nconst _hoisted_15 = {\n  key: 1\n};\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Выбранный контент:\", -1);\nconst _hoisted_17 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.keyword = $event),\n    placeholder: \"Введите ключ (например, 1)\"\n  }, null, 512), [[_vModelText, $data.keyword]]), _createElementVNode(\"button\", {\n    disabled: !$data.keyword,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Отправить\", 8, _hoisted_1), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [$data.contentList.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"нет контента\")) : _createCommentVNode(\"\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.contentList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"div\", null, [!item.isDownloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createElementVNode(\"a\", {\n      target: \"_blank\",\n      href: item\n    }, _toDisplayString(item), 9, _hoisted_4), _createElementVNode(\"button\", {\n      onClick: $event => {\n        $options.downloadFile(index);\n      }\n    }, \"Скачать\", 8, _hoisted_5), _hoisted_6])) : _createCommentVNode(\"\", true), item.isDownloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createTextVNode(\" Размер: \" + _toDisplayString(item.status.size) + \" bytes\", 1), _hoisted_8, _createTextVNode(\" Кол-во запущенных потоков: \" + _toDisplayString(item.status.currentThreads), 1), _hoisted_9, _createTextVNode(\" Количечество памяти на поток: \" + _toDisplayString(this.byteLimitPerSecond) + \" \", 1), _hoisted_10, _createTextVNode(\" Прогресс загрузки: \" + _toDisplayString(item.status.progress) + \"% \", 1), _createElementVNode(\"a\", {\n      href: item.downloadLink,\n      download: \"\"\n    }, \"Скачать файл\", 8, _hoisted_11), _hoisted_12, _hoisted_13])) : _createCommentVNode(\"\", true)])]);\n  }), 128))])]), _ctx.item && _ctx.item.isDownloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_14, \" Прогресс загрузки: \" + _toDisplayString($data.downloadProgress) + \"% \", 1)) : _createCommentVNode(\"\", true), _ctx.selectedContent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_hoisted_16, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedContent, (url, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"a\", {\n      target: \"_blank\",\n      href: url\n    }, _toDisplayString(url), 9, _hoisted_17)]);\n  }), 128))])])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","$data","keyword","$event","placeholder","disabled","onClick","_cache","args","$options","sendMessage","_hoisted_1","contentList","length","_hoisted_2","_Fragment","_renderList","item","index","key","isDownloading","_hoisted_3","target","href","_hoisted_4","downloadFile","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","status","size","_hoisted_8","currentThreads","_hoisted_9","byteLimitPerSecond","_hoisted_10","progress","downloadLink","download","_hoisted_11","_hoisted_12","_hoisted_13","_ctx","_hoisted_14","downloadProgress","selectedContent","_hoisted_15","_hoisted_16","url","_hoisted_17"],"sources":["C:\\std\\vue-nest-http-websocket\\src\\components\\SocetClient.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input v-model=\"keyword\" placeholder=\"Введите ключ (например, 1)\">\r\n    <button :disabled=\"!keyword\" @click=\"sendMessage\">Отправить</button>\r\n    <div>\r\n      <ul>\r\n        <p v-if=\"contentList.length === 0\">нет контента</p>\r\n        <li v-for=\"(item, index) in contentList\" :key=\"index\">\r\n          <div>\r\n            <div v-if=\"!item.isDownloading\">\r\n              <a target=\"_blank\" :href=\"item\">{{ item }}</a>\r\n              <button @click=\"downloadFile(index);\">Скачать</button>\r\n              <br>\r\n            </div>\r\n\r\n            <div v-if=\"item.isDownloading\">\r\n              Размер: {{ item.status.size }} bytes<br>\r\n              Кол-во запущенных потоков: {{ item.status.currentThreads }}<br>\r\n              Количечество памяти на поток: {{ this.byteLimitPerSecond }} <br>\r\n              Прогресс загрузки: {{ item.status.progress }}%\r\n              <a :href=\"item.downloadLink\" download>Скачать файл</a>\r\n              <br>\r\n              <br>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n     <!-- Элемент для отображения прогресса -->\r\n     <div v-if=\"item && item.isDownloading\">\r\n  Прогресс загрузки: {{ downloadProgress }}%\r\n</div>\r\n    <div v-if=\"selectedContent\">\r\n      <h2>Выбранный контент:</h2>\r\n      <ul>\r\n        <li v-for=\"(url, index) in selectedContent\" :key=\"index\">\r\n          <a target=\"_blank\" :href=\"url\">{{ url }}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      keyword: \"\",\r\n      status: {\r\n        size: 0,\r\n        currentThreads: 0,\r\n        progress: 0,\r\n        selectedContent: [],\r\n\r\n      },\r\n      showDownloadLink: true, \r\n      contentList: [],\r\n      vizit: true,\r\n      downloadLimit: null,\r\n      byteLimitPerSecond: null,\r\n      downloadProgress: 0,\r\n    };\r\n  },\r\n  created() {\r\n    // Запрос для получения downloadLimit\r\n    fetch('http://localhost:3000/config/download-limit')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.downloadLimit = data.downloadLimit;\r\n        // Теперь вы можете использовать this.downloadLimit в вашем компоненте\r\n      });\r\n\r\n    // Запрос для получения byteLimitPerSecond\r\n    fetch('http://localhost:3000/config/byte-limit-per-second')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.byteLimitPerSecond = data.byteLimitPerSecond;\r\n        // Теперь вы можете использовать this.byteLimitPerSecond в вашем компоненте\r\n      });\r\n\r\n    // Проверяем наличие данных в LocalStorage\r\n    const storedContentList = localStorage.getItem('contentList');\r\n    if (storedContentList) {\r\n      this.contentList = JSON.parse(storedContentList);\r\n      // Если данные в LocalStorage есть, устанавливаем vizit в false\r\n      this.vizit = false;\r\n    }\r\n  },\r\n  methods: {\r\n    async downloadFile(index) {\r\n      \r\n      try {\r\n        this.showDownloadLink = false;\r\n        this.downloadProgress = 0;\r\n        this.startDownloadProgress(); \r\n        const url = this.contentList[index]; // Получаем URL из contentList по индексу\r\n        console.log(url)\r\n        const response = await fetch(`http://localhost:3000/download/${encodeURIComponent(url)}`, {\r\n          method: 'GET',\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const blob = await response.blob();\r\n          const fileURL = window.URL.createObjectURL(blob);\r\n          this.vizit = false;\r\n\r\n          const status = {\r\n            size: blob.size,\r\n            currentThreads: this.downloadLimit,\r\n            progress: 100, // Считаем, что загрузка завершена\r\n          };\r\n\r\n          // Обновляем свойства элемента в contentList\r\n          this.contentList[index] = {\r\n            ...this.contentList[index],\r\n            status,\r\n            isDownloading: true,\r\n            downloadLink: fileURL,\r\n          };\r\n          localStorage.setItem('contentList', JSON.stringify(this.contentList));\r\n          console.log('Данные сохранены в LocalStorage:', this.contentList);\r\n        } else {\r\n          console.error('Ошибка скачивания файла');\r\n        }\r\n      } catch (error) {\r\n        console.error(`Произошла ошибка: ${error}`);\r\n      }\r\n    },\r\n    hideDownloadLink() {\r\n      this.showDownloadLink = false; // При нажатии на кнопку скрываем элемент\r\n    },\r\n    startDownloadProgress() {\r\n      // Запускаем обновление прогресса каждые 100 миллисекунд\r\n      this.downloadProgressInterval = setInterval(() => {\r\n        // Обновляем прогресс с каким-то шагом\r\n        this.downloadProgress += 1; // Здесь вы можете настроить, какой шаг использовать\r\n        if (this.downloadProgress >= 100) {\r\n          clearInterval(this.downloadProgressInterval); // Завершаем интервал после достижения 100%\r\n        }\r\n      }, 100);\r\n    },\r\n    sendMessage() {\r\n      if (this.keyword) {\r\n        const socket = new WebSocket(\"ws://localhost:3000/keywords\");\r\n        socket.addEventListener(\"open\", () => {\r\n          socket.send(this.keyword);\r\n          this.contentList = [];\r\n        });\r\n\r\n        socket.addEventListener(\"message\", (event) => {\r\n          const data = JSON.parse(event.data);\r\n          console.log(\"Получены данные от сервера:\", data);\r\n\r\n          if (Array.isArray(data) && data.length > 0) {\r\n            this.status = {\r\n              size: data[0].size,\r\n              currentThreads: data[0].currentThreads,\r\n              progress: data[0].progress,\r\n            };\r\n            this.contentList = data;\r\n          } else {\r\n            this.status = {\r\n              size: 0,\r\n              currentThreads: 0,\r\n              progress: 0,\r\n            };\r\n            this.contentList = [];\r\n          }\r\n        });\r\n\r\n        socket.addEventListener(\"error\", () => {\r\n          console.log(\"Ошибка соединения\");\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;;gCAYcA,mBAAA,CAAI;;;;gCAIgCA,mBAAA,CAAI;gCACmBA,mBAAA,CAAI;iCACHA,mBAAA,CAAI;;iCAGhEA,mBAAA,CAAI;iCACJA,mBAAA,CAAI;;;;;;;iCAWZA,mBAAA,CAA2B,YAAvB,oBAAkB;;;uBAhC1BC,mBAAA,CAuCM,c,gBAtCJD,mBAAA,CAAkE;+DAAlDE,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;gCAArBH,KAAA,CAAAC,OAAO,E,GACvBH,mBAAA,CAAoE;IAA3DM,QAAQ,GAAGJ,KAAA,CAAAC,OAAO;IAAGI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,WAAS,KAAAG,UAAA,GAC3DZ,mBAAA,CAuBM,cAtBJA,mBAAA,CAqBK,aApBME,KAAA,CAAAW,WAAW,CAACC,MAAM,U,cAA3Bb,mBAAA,CAAmD,KAAAc,UAAA,EAAhB,cAAY,K,kDAC/Cd,mBAAA,CAkBKe,SAAA,QAAAC,WAAA,CAlBuBf,KAAA,CAAAW,WAAW,GAA3BK,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAkBK;MAlBqCmB,GAAG,EAAED;IAAK,IAClDnB,mBAAA,CAgBM,c,CAfQkB,IAAI,CAACG,aAAa,I,cAA9BpB,mBAAA,CAIM,OAAAqB,UAAA,GAHJtB,mBAAA,CAA8C;MAA3CuB,MAAM,EAAC,QAAQ;MAAEC,IAAI,EAAEN;wBAASA,IAAI,MAAAO,UAAA,GACvCzB,mBAAA,CAAsD;MAA7CO,OAAK,EAAAH,MAAA;QAAEM,QAAA,CAAAgB,YAAY,CAACP,KAAK;MAAA;OAAI,SAAO,KAAAQ,UAAA,GAC7CC,UAAI,C,oCAGKV,IAAI,CAACG,aAAa,I,cAA7BpB,mBAAA,CAQM,OAAA4B,UAAA,G,iBARyB,WACrB,GAAAC,gBAAA,CAAGZ,IAAI,CAACa,MAAM,CAACC,IAAI,IAAG,QAAM,MAAAC,UAAI,E,iBAAA,8BACb,GAAAH,gBAAA,CAAGZ,IAAI,CAACa,MAAM,CAACG,cAAc,OAAGC,UAAI,E,iBAAA,iCACjC,GAAAL,gBAAA,MAAQM,kBAAkB,IAAG,GAAC,MAAAC,WAAI,E,iBAAA,sBAC7C,GAAAP,gBAAA,CAAGZ,IAAI,CAACa,MAAM,CAACO,QAAQ,IAAG,IAC7C,MAAAtC,mBAAA,CAAsD;MAAlDwB,IAAI,EAAEN,IAAI,CAACqB,YAAY;MAAEC,QAAQ,EAAR;OAAS,cAAY,KAAAC,WAAA,GAClDC,WAAI,EACJC,WAAI,C;iBAOFC,IAAA,CAAA1B,IAAI,IAAI0B,IAAA,CAAA1B,IAAI,CAACG,aAAa,I,cAArCpB,mBAAA,CAEC,OAAA4C,WAAA,EAFsC,sBACvB,GAAAf,gBAAA,CAAG5B,KAAA,CAAA4C,gBAAgB,IAAG,IAC3C,Q,+BACeF,IAAA,CAAAG,eAAe,I,cAA1B9C,mBAAA,CAOM,OAAA+C,WAAA,GANJC,WAA2B,EAC3BjD,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKe,SAAA,QAAAC,WAAA,CAFsB2B,IAAA,CAAAG,eAAe,GAA9BG,GAAG,EAAE/B,KAAK;yBAAtBlB,mBAAA,CAEK;MAFwCmB,GAAG,EAAED;IAAK,IACrDnB,mBAAA,CAA4C;MAAzCuB,MAAM,EAAC,QAAQ;MAAEC,IAAI,EAAE0B;wBAAQA,GAAG,MAAAC,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}