{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Отправить HTTP-запрос\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Поиск по ключам\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"href\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Результаты HTTP-запросов:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"WebSocket-клиент:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createCommentVNode(\" Форма для отправки HTTP-запросов \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => _ctx.sendHttpRequest && _ctx.sendHttpRequest(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.url = $event),\n    type: \"text\",\n    placeholder: \"URL\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.url]]), _hoisted_1], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" Вывод результатов HTTP-запросов \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" Поиск по ключам \"), _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => _ctx.selectedKeyword = $event),\n    onInput: _cache[3] || (_cache[3] = (...args) => _ctx.updateUrl && _ctx.updateUrl(...args)),\n    placeholder: \"Введите ключевое слово\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, _ctx.selectedKeyword]]), _ctx.selectedUrl ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, [_createCommentVNode(\" <a :href=\\\"'http://' + selectedUrl\\\">{{ selectedUrl }}</a> \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.selectedUrls, selectedUrl => {\n    return _openBlock(), _createElementBlock(\"li\", null, [_createElementVNode(\"a\", {\n      href: 'http://' + selectedUrl\n    }, _toDisplayString(selectedUrl), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 256 /* UNKEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.httpResponses, (response, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, _toDisplayString(response), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), _createCommentVNode(\" WebSocket-клиент \"), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => _ctx.wsMessage = $event),\n    type: \"text\",\n    placeholder: \"WebSocket сообщение\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.wsMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => _ctx.sendWebSocketMessage && _ctx.sendWebSocketMessage(...args))\n  }, \"Отправить WebSocket сообщение\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.wsMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","type","_createCommentVNode","onSubmit","_cache","_withModifiers","args","_ctx","sendHttpRequest","url","$event","placeholder","_hoisted_1","_hoisted_2","selectedKeyword","onInput","updateUrl","selectedUrl","_createElementBlock","_hoisted_3","_Fragment","_renderList","selectedUrls","href","_hoisted_4","_hoisted_5","httpResponses","response","index","key","_toDisplayString","_hoisted_6","wsMessage","onClick","sendWebSocketMessage","wsMessages","message"],"sources":["C:\\std\\vue-nest-http-websocket\\src\\components\\HttpClient.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Форма для отправки HTTP-запросов -->\r\n    <form @submit.prevent=\"sendHttpRequest\">\r\n      <input v-model=\"url\" type=\"text\" placeholder=\"URL\">\r\n      <button type=\"submit\">Отправить HTTP-запрос</button>\r\n    </form>\r\n    <!-- Вывод результатов HTTP-запросов -->\r\n\r\n    <div>\r\n      <!-- Поиск по ключам -->\r\n      <h2>Поиск по ключам</h2>\r\n\r\n      <input v-model=\"selectedKeyword\" @input=\"updateUrl\" placeholder=\"Введите ключевое слово\" />\r\n      <p v-if=\"selectedUrl\">\r\n        <!-- <a :href=\"'http://' + selectedUrl\">{{ selectedUrl }}</a> -->\r\n      <ul>\r\n        <li v-for=\"selectedUrl in selectedUrls\">\r\n          <a :href=\"'http://' + selectedUrl\">{{ selectedUrl }}</a>\r\n        </li>\r\n      </ul>\r\n      </p>\r\n    </div>\r\n\r\n\r\n\r\n\r\n    <h2>Результаты HTTP-запросов:</h2>\r\n    <div v-for=\"(response, index) in httpResponses\" :key=\"index\">\r\n      <p>{{ response }}</p>\r\n    </div>\r\n  </div>\r\n  <!-- WebSocket-клиент -->\r\n  <div>\r\n    <h2>WebSocket-клиент:</h2>\r\n    <input v-model=\"wsMessage\" type=\"text\" placeholder=\"WebSocket сообщение\">\r\n    <button @click=\"sendWebSocketMessage\">Отправить WebSocket сообщение</button>\r\n    <div v-for=\"(message, index) in wsMessages\" :key=\"index\">\r\n      <p>{{ message }}</p>\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n// import VueNativeSock from 'vue-native-websocket';\r\n// Vue.use(VueNativeSock, 'ws://localhost:3000', {\r\n//   reconnection: true, // автоматическая переподключение при разрыве связи\r\n//   reconnectionAttempts: 5, // количество попыток переподключения\r\n//   reconnectionDelay: 3000, // задержка перед каждой попыткой переподключения\r\n// })\r\nexport default {\r\n  data() {\r\n    return {\r\n      url: 'http://localhost:3000/api', // Замените на ваш URL сервера\r\n      httpResponses: [],\r\n      wsMessage: '',\r\n      wsMessages: [],\r\n\r\n      socket: null, // Добавляем переменную для хранения WebSocket соединения\r\n      selectedKeyword: \"\",\r\n      selectedUrl: \"\",\r\n      selectedUrls:\"\"\r\n   \r\n    };\r\n  },\r\n  created() {\r\n    // Инициализация WebSocket и обработчика ошибок\r\n    this.initWebSocket();\r\n\r\n  },\r\n  methods: {\r\n    async sendHttpRequest() {\r\n      try {\r\n        const response = await fetch(this.url);\r\n        const data = await response.text();\r\n        this.httpResponses.push(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    updateUrl() {\r\n      axios.get(\"http://localhost:3000/keywords\")\r\n        .then((response) => {\r\n          const keywordData = response.data.find((entry) => entry.keyword === this.selectedKeyword);\r\n          this.selectedUrl = keywordData ? keywordData.urls[0] : \"\";\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Ошибка при получении данных: \" + error);\r\n        });\r\n    },\r\n    selectedUrls(){\r\n      axios.get(\"http://localhost:3000/keywords\")\r\n        .then((response) => {\r\n          const keywordData = response.data.find((entry) => entry.keyword === this.selectedKeyword);\r\n          this.selectedUrl = keywordData ? keywordData.urls : \"\";\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Ошибка при получении данных: \" + error);\r\n        });\r\n    },\r\n    },\r\n\r\n    initWebSocket() {\r\n      // Инициализация WebSocket и обработчика ошибок\r\n\r\n      const socket = new WebSocket('ws://localhost:3000/api');\r\n\r\n      // Обработчик ошибок WebSocket\r\n      socket.addEventListener('error', (event) => {\r\n        console.error('Произошла ошибка:', event);\r\n      });\r\n\r\n      // Обработчик события открытия соединения\r\n      socket.addEventListener('open', (event) => {\r\n        console.log('WebSocket соединение установлено:', event);\r\n      });\r\n\r\n      // Обработчик события приема сообщения\r\n      socket.addEventListener('message', (event) => {\r\n        console.log('Получено сообщение:', event.data);\r\n        this.wsMessages.push(event.data); // Сохраняем полученное сообщение\r\n      });\r\n\r\n      // Обработчик события закрытия соединения\r\n      socket.addEventListener('close', (event) => {\r\n        console.log('WebSocket соединение закрыто:', event);\r\n      });\r\n\r\n      this.socket = socket; // Сохраняем соединение в состоянии компонента\r\n\r\n    },\r\n    sendWebSocketMessage() {\r\n      // Отправка сообщения через WebSocket\r\n      if (this.socket && this.socket.readyState === WebSocket.OPEN) {\r\n        this.socket.send(this.wsMessage);\r\n        console.log('Отправлено сообщение через WebSocket:', this.wsMessage);\r\n        this.wsMessages.push(this.wsMessage)\r\n        this.wsMessage = ''; // Очищаем поле ввода сообщения\r\n      } else {\r\n        console.error('WebSocket соединение не установлено или закрыто.');\r\n      }\r\n    },\r\n\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";gCAKMA,mBAAA,CAAoD;EAA5CC,IAAI,EAAC;AAAQ,GAAC,uBAAqB;gCAM3CD,mBAAA,CAAwB,YAApB,iBAAe;;;;;gCAgBrBA,mBAAA,CAAkC,YAA9B,2BAAyB;gCAO7BA,mBAAA,CAA0B,YAAtB,mBAAiB;;;6DAjCvBA,mBAAA,CA8BM,cA7BJE,mBAAA,sCAAyC,EACzCF,mBAAA,CAGO;IAHAG,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,IAAA,CAAAC,eAAA,IAAAD,IAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;sBACpCN,mBAAA,CAAmD;+DAAnCO,IAAA,CAAAE,GAAG,GAAAC,MAAA;IAAET,IAAI,EAAC,MAAM;IAACU,WAAW,EAAC;iDAA7BJ,IAAA,CAAAE,GAAG,E,GACnBG,UAAoD,C,4BAEtDV,mBAAA,qCAAwC,EAExCF,mBAAA,CAaM,cAZJE,mBAAA,qBAAwB,EACxBW,UAAwB,E,gBAExBb,mBAAA,CAA2F;+DAA3EO,IAAA,CAAAO,eAAe,GAAAJ,MAAA;IAAGK,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,IAAA,CAAAS,SAAA,IAAAT,IAAA,CAAAS,SAAA,IAAAV,IAAA,CAAS;IAAEK,WAAW,EAAC;iEAAhDJ,IAAA,CAAAO,eAAe,E,GACtBP,IAAA,CAAAU,WAAW,I,cAApBC,mBAAA,CAOI,KAAAC,UAAA,GANFjB,mBAAA,gEAAiE,EACnEF,mBAAA,CAIK,c,kBAHHkB,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFqBd,IAAA,CAAAe,YAAY,EAA3BL,WAAW;yBAAtBC,mBAAA,CAEK,aADHlB,mBAAA,CAAwD;MAApDuB,IAAI,cAAcN;wBAAgBA,WAAW,wBAAAO,UAAA,E;+EASvDC,UAAkC,G,kBAClCP,mBAAA,CAEME,SAAA,QAAAC,WAAA,CAF2Bd,IAAA,CAAAmB,aAAa,GAAjCC,QAAQ,EAAEC,KAAK;yBAA5BV,mBAAA,CAEM;MAF2CW,GAAG,EAAED;IAAK,IACzD5B,mBAAA,CAAqB,WAAA8B,gBAAA,CAAfH,QAAQ,iB;oCAGlBzB,mBAAA,sBAAyB,EACzBF,mBAAA,CAQM,cAPJ+B,UAA0B,E,gBAC1B/B,mBAAA,CAAyE;+DAAzDO,IAAA,CAAAyB,SAAS,GAAAtB,MAAA;IAAET,IAAI,EAAC,MAAM;IAACU,WAAW,EAAC;iDAAnCJ,IAAA,CAAAyB,SAAS,E,GACzBhC,mBAAA,CAA4E;IAAnEiC,OAAK,EAAA7B,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,IAAA,CAAA2B,oBAAA,IAAA3B,IAAA,CAAA2B,oBAAA,IAAA5B,IAAA,CAAoB;KAAE,+BAA6B,I,kBACnEY,mBAAA,CAGME,SAAA,QAAAC,WAAA,CAH0Bd,IAAA,CAAA4B,UAAU,GAA7BC,OAAO,EAAER,KAAK;yBAA3BV,mBAAA,CAGM;MAHuCW,GAAG,EAAED;IAAK,IACrD5B,mBAAA,CAAoB,WAAA8B,gBAAA,CAAdM,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}