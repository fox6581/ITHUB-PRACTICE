{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'TestOne',\n  data() {\n    return {\n      url: '',\n      responses: []\n    };\n  },\n  methods: {\n    sendRequest() {\n      const ws = new WebSocket('ws://localhost:3000/keywords'); // Замените на соответствующий URL\n      ws.onopen = () => {\n        console.log('WebSocket соединение установлено.');\n        ws.send(this.url);\n      };\n      ws.onmessage = event => {\n        const response = event.data;\n        console.log('Получено сообщение от сервера:', response);\n        this.responses.push(response);\n      };\n      ws.onclose = () => {\n        console.log('WebSocket соединение закрыто');\n      };\n    }\n  }\n};","map":{"version":3,"names":["name","data","url","responses","methods","sendRequest","ws","WebSocket","onopen","console","log","send","onmessage","event","response","push","onclose"],"sources":["C:\\std\\vue-nest-http-websocket\\src\\components\\Test1.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>Запросы к серверу</h1>\r\n    <div>\r\n      <input v-model=\"url\" placeholder=\"URL\">\r\n      <button @click=\"sendRequest\">Отправить запрос</button>\r\n    </div>\r\n    <div v-for=\"(response, index) in responses\" :key=\"index\">\r\n      <h2>Ответ {{ index + 1 }}</h2>\r\n      <pre>{{ response }}</pre>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'TestOne',\r\n  data() {\r\n    return {\r\n      url: '',\r\n      responses: [],\r\n    };\r\n  },\r\n  methods: {\r\n    sendRequest() {\r\n      const ws = new WebSocket('ws://localhost:3000/keywords'); // Замените на соответствующий URL\r\n      ws.onopen = () => {\r\n        console.log('WebSocket соединение установлено.');\r\n        ws.send(this.url);\r\n      };\r\n\r\n      ws.onmessage = (event) => {\r\n        const response = event.data;\r\n        console.log('Получено сообщение от сервера:', response);\r\n        this.responses.push(response);\r\n      };\r\n\r\n      ws.onclose = () => {\r\n        console.log('WebSocket соединение закрыто');\r\n      };\r\n    \r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n/* Добавьте стили, если необходимо */\r\n</style>\r\n"],"mappings":";AAeA,eAAe;EACbA,IAAI,EAAE,SAAS;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,GAAG,EAAE,EAAE;MACPC,SAAS,EAAE;IACb,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,MAAMC,EAAC,GAAI,IAAIC,SAAS,CAAC,8BAA8B,CAAC,EAAE;MAC1DD,EAAE,CAACE,MAAK,GAAI,MAAM;QAChBC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;QAChDJ,EAAE,CAACK,IAAI,CAAC,IAAI,CAACT,GAAG,CAAC;MACnB,CAAC;MAEDI,EAAE,CAACM,SAAQ,GAAKC,KAAK,IAAK;QACxB,MAAMC,QAAO,GAAID,KAAK,CAACZ,IAAI;QAC3BQ,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEI,QAAQ,CAAC;QACvD,IAAI,CAACX,SAAS,CAACY,IAAI,CAACD,QAAQ,CAAC;MAC/B,CAAC;MAEDR,EAAE,CAACU,OAAM,GAAI,MAAM;QACjBP,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC7C,CAAC;IAEH;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}