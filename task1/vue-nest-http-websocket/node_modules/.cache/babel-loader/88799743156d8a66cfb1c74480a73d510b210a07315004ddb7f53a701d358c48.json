{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Отправить HTTP-запрос\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Поиск через сокеты\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = [\"href\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Результаты HTTP-запросов:\", -1 /* HOISTED */);\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"WebSocket-клиент:\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createCommentVNode(\" Форма для отправки HTTP-запросов \"), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $setup.sendHttpRequest && $setup.sendHttpRequest(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.url = $event),\n    type: \"text\",\n    placeholder: \"URL\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.url]]), _hoisted_1], 32 /* HYDRATE_EVENTS */), _createCommentVNode(\" Поиск через сокеты \"), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.selectedKeyword = $event),\n    onInput: _cache[3] || (_cache[3] = (...args) => $setup.updateUrl && $setup.updateUrl(...args)),\n    placeholder: \"Введите ключевое слово\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $setup.selectedKeyword]]), $setup.selectedUrls.length > 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, [_createTextVNode(\" Соответствующие URL-адреса: \"), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.selectedUrls, (url, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"a\", {\n      href: 'http://' + url\n    }, _toDisplayString(url), 9 /* TEXT, PROPS */, _hoisted_4)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Результаты HTTP-запросов \"), _hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.httpResponses, (response, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, _toDisplayString(response), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" WebSocket-клиент \"), _createElementVNode(\"div\", null, [_hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.wsMessage = $event),\n    type: \"text\",\n    placeholder: \"WebSocket сообщение\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $setup.wsMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $setup.sendWebSocketMessage && $setup.sendWebSocketMessage(...args))\n  }, \"Отправить WebSocket сообщение\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.wsMessages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index\n    }, [_createElementVNode(\"p\", null, _toDisplayString(message), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_createCommentVNode","onSubmit","_cache","_withModifiers","args","$setup","sendHttpRequest","url","$event","placeholder","_hoisted_1","_hoisted_2","selectedKeyword","onInput","updateUrl","selectedUrls","length","_hoisted_3","_Fragment","_renderList","index","key","href","_hoisted_4","_hoisted_5","httpResponses","response","_toDisplayString","_hoisted_6","wsMessage","onClick","sendWebSocketMessage","wsMessages","message"],"sources":["C:\\std\\vue-nest-http-websocket\\src\\components\\HttpClient.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <!-- Форма для отправки HTTP-запросов -->\r\n    <form @submit.prevent=\"sendHttpRequest\">\r\n      <input v-model=\"url\" type=\"text\" placeholder=\"URL\">\r\n      <button type=\"submit\">Отправить HTTP-запрос</button>\r\n    </form>\r\n\r\n    <!-- Поиск через сокеты -->\r\n    <div>\r\n      <h2>Поиск через сокеты</h2>\r\n      <input v-model=\"selectedKeyword\" @input=\"updateUrl\" placeholder=\"Введите ключевое слово\" />\r\n      <p v-if=\"selectedUrls.length > 0\">\r\n        Соответствующие URL-адреса:\r\n        <ul>\r\n          <li v-for=\"(url, index) in selectedUrls\" :key=\"index\">\r\n            <a :href=\"'http://' + url\">{{ url }}</a>\r\n          </li>\r\n        </ul>\r\n      </p>\r\n    </div>\r\n\r\n    <!-- Результаты HTTP-запросов -->\r\n    <h2>Результаты HTTP-запросов:</h2>\r\n    <div v-for=\"(response, index) in httpResponses\" :key=\"index\">\r\n      <p>{{ response }}</p>\r\n    </div>\r\n\r\n    <!-- WebSocket-клиент -->\r\n    <div>\r\n      <h2>WebSocket-клиент:</h2>\r\n      <input v-model=\"wsMessage\" type=\"text\" placeholder=\"WebSocket сообщение\">\r\n      <button @click=\"sendWebSocketMessage\">Отправить WebSocket сообщение</button>\r\n      <div v-for=\"(message, index) in wsMessages\" :key=\"index\">\r\n        <p>{{ message }}</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, onMounted } from 'vue';\r\nimport VueNativeSock from 'vue-native-websocket';\r\n\r\nexport default {\r\n  setup() {\r\n    const url = ref('http://localhost:3000/api');\r\n    const httpResponses = ref([]);\r\n    const wsMessage = ref('');\r\n    const wsMessages = ref([]);\r\n    const selectedKeyword = ref('');\r\n    const selectedUrls = ref([]);\r\n\r\n    const socket = ref(null);\r\n\r\n    // Инициализация WebSocket и обработчика ошибок\r\n    const initWebSocket = () => {\r\n      socket.value = new WebSocket('ws://localhost:3000/api');\r\n\r\n      // Обработчик ошибок WebSocket\r\n      socket.value.addEventListener('error', (event) => {\r\n        console.error('Произошла ошибка:', event);\r\n      });\r\n\r\n      // Обработчик события открытия соединения\r\n      socket.value.addEventListener('open', (event) => {\r\n        console.log('WebSocket соединение установлено:', event);\r\n      });\r\n\r\n      // Обработчик события приема сообщения\r\n      socket.value.addEventListener('message', (event) => {\r\n        console.log('Получено сообщение:', event.data);\r\n        wsMessages.value.push(event.data); // Сохраняем полученное сообщение\r\n      });\r\n\r\n      // Обработчик события закрытия соединения\r\n      socket.value.addEventListener('close', (event) => {\r\n        console.log('WebSocket соединение закрыто:', event);\r\n      });\r\n    };\r\n\r\n    const sendWebSocketMessage = () => {\r\n      // Отправка сообщения через WebSocket\r\n      if (socket.value && socket.value.readyState === WebSocket.OPEN) {\r\n        socket.value.send(wsMessage.value);\r\n        console.log('Отправлено сообщение через WebSocket:', wsMessage.value);\r\n        wsMessages.value.push(wsMessage.value);\r\n        wsMessage.value = ''; // Очищаем поле ввода сообщения\r\n      } else {\r\n        console.error('WebSocket соединение не установлено или закрыто.');\r\n      }\r\n    };\r\n\r\n    const sendHttpRequest = async () => {\r\n      try {\r\n        const response = await fetch(url.value);\r\n        const data = await response.text();\r\n        httpResponses.value.push(data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    const updateUrl = () => {\r\n      socket.value.sendObj({ keyword: selectedKeyword.value });\r\n    };\r\n\r\n    // Инициализация WebSocket при создании компонента\r\n    onMounted(initWebSocket);\r\n\r\n    return {\r\n      url,\r\n      httpResponses,\r\n      wsMessage,\r\n      wsMessages,\r\n      selectedKeyword,\r\n      selectedUrls,\r\n      sendHttpRequest,\r\n      sendWebSocketMessage,\r\n      updateUrl,\r\n    };\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\nul {\r\n  list-style: none;\r\n}\r\n</style>\r\n"],"mappings":";gCAKMA,mBAAA,CAAoD;EAA5CC,IAAI,EAAC;AAAQ,GAAC,uBAAqB;gCAK3CD,mBAAA,CAA2B,YAAvB,oBAAkB;;;;;gCAaxBA,mBAAA,CAAkC,YAA9B,2BAAyB;gCAO3BA,mBAAA,CAA0B,YAAtB,mBAAiB;;;uBA7BzBE,mBAAA,CAoCM,cAnCJC,mBAAA,sCAAyC,EACzCH,mBAAA,CAGO;IAHAI,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,MAAA,CAAAC,eAAA,IAAAD,MAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;sBACpCP,mBAAA,CAAmD;+DAAnCQ,MAAA,CAAAE,GAAG,GAAAC,MAAA;IAAEV,IAAI,EAAC,MAAM;IAACW,WAAW,EAAC;iDAA7BJ,MAAA,CAAAE,GAAG,E,GACnBG,UAAoD,C,4BAGtDV,mBAAA,wBAA2B,EAC3BH,mBAAA,CAWM,cAVJc,UAA2B,E,gBAC3Bd,mBAAA,CAA2F;+DAA3EQ,MAAA,CAAAO,eAAe,GAAAJ,MAAA;IAAGK,OAAK,EAAAX,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,MAAA,CAAAS,SAAA,IAAAT,MAAA,CAAAS,SAAA,IAAAV,IAAA,CAAS;IAAEK,WAAW,EAAC;iEAAhDJ,MAAA,CAAAO,eAAe,E,GACtBP,MAAA,CAAAU,YAAY,CAACC,MAAM,Q,cAA5BjB,mBAAA,CAOI,KAAAkB,UAAA,G,iBAP8B,+BAEhC,GAAApB,mBAAA,CAIK,c,kBAHHE,mBAAA,CAEKmB,SAAA,QAAAC,WAAA,CAFsBd,MAAA,CAAAU,YAAY,GAA3BR,GAAG,EAAEa,KAAK;yBAAtBrB,mBAAA,CAEK;MAFqCsB,GAAG,EAAED;IAAK,IAClDvB,mBAAA,CAAwC;MAApCyB,IAAI,cAAcf;wBAAQA,GAAG,wBAAAgB,UAAA,E;6EAMzCvB,mBAAA,8BAAiC,EACjCwB,UAAkC,G,kBAClCzB,mBAAA,CAEMmB,SAAA,QAAAC,WAAA,CAF2Bd,MAAA,CAAAoB,aAAa,GAAjCC,QAAQ,EAAEN,KAAK;yBAA5BrB,mBAAA,CAEM;MAF2CsB,GAAG,EAAED;IAAK,IACzDvB,mBAAA,CAAqB,WAAA8B,gBAAA,CAAfD,QAAQ,iB;kCAGhB1B,mBAAA,sBAAyB,EACzBH,mBAAA,CAOM,cANJ+B,UAA0B,E,gBAC1B/B,mBAAA,CAAyE;+DAAzDQ,MAAA,CAAAwB,SAAS,GAAArB,MAAA;IAAEV,IAAI,EAAC,MAAM;IAACW,WAAW,EAAC;iDAAnCJ,MAAA,CAAAwB,SAAS,E,GACzBhC,mBAAA,CAA4E;IAAnEiC,OAAK,EAAA5B,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,MAAA,CAAA0B,oBAAA,IAAA1B,MAAA,CAAA0B,oBAAA,IAAA3B,IAAA,CAAoB;KAAE,+BAA6B,I,kBACnEL,mBAAA,CAEMmB,SAAA,QAAAC,WAAA,CAF0Bd,MAAA,CAAA2B,UAAU,GAA7BC,OAAO,EAAEb,KAAK;yBAA3BrB,mBAAA,CAEM;MAFuCsB,GAAG,EAAED;IAAK,IACrDvB,mBAAA,CAAoB,WAAA8B,gBAAA,CAAdM,OAAO,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}