{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Статус загрузки:\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"disabled\"];\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Ответ от сервера:\", -1 /* HOISTED */);\nconst _hoisted_5 = [\"href\"];\nconst _hoisted_6 = {\n  key: 1\n};\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"li\", null, \"Данные не найдены\", -1 /* HOISTED */);\nconst _hoisted_8 = [_hoisted_7];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"p\", null, \"Размер: \" + _toDisplayString($data.status.size), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Количество запущенных потоков: \" + _toDisplayString($data.status.currentThreads), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Прогресс загрузки: \" + _toDisplayString($data.status.progress) + \"%\", 1 /* TEXT */)]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.keyword = $event),\n    placeholder: \"Введите ключ (например, 1)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.keyword]]), _createElementVNode(\"button\", {\n    disabled: !$data.keyword,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Отправить\", 8 /* PROPS */, _hoisted_2), _createElementVNode(\"div\", null, [$data.response.length > 0 ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_3, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.response, (url, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"a\", {\n      href: 'http://' + url\n    }, _toDisplayString(url), 9 /* TEXT, PROPS */, _hoisted_5)]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $data.notFound ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_6, _hoisted_8)) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["_createElementVNode","_hoisted_7","_createElementBlock","_hoisted_1","_toDisplayString","$data","status","size","currentThreads","progress","keyword","$event","placeholder","disabled","onClick","_cache","args","$options","sendMessage","_hoisted_2","response","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","url","index","key","href","_hoisted_5","notFound","_hoisted_6","_hoisted_8"],"sources":["C:\\std\\vue-nest-http-websocket\\src\\components\\SocetClient.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div>\r\n      <p>Статус загрузки:</p>\r\n      <p>Размер: {{ status.size }}</p>\r\n      <p>Количество запущенных потоков: {{ status.currentThreads }}</p>\r\n      <p>Прогресс загрузки: {{ status.progress }}%</p>\r\n    </div>\r\n    <input v-model=\"keyword\" placeholder=\"Введите ключ (например, 1)\">\r\n    <button :disabled=\"!keyword\" @click=\"sendMessage\">Отправить</button>\r\n  \r\n    <div>\r\n      <ul v-if=\"response.length > 0\">\r\n        <p>Ответ от сервера:</p>\r\n        <li v-for=\"(url, index) in response\" :key=\"index\">\r\n          <a :href=\"'http://' + url\">{{ url }}</a>\r\n        </li>\r\n      </ul>\r\n      <ul v-if=\"notFound\">\r\n        <li>Данные не найдены</li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      keyword: \"\",\r\n      response: [],\r\n      notFound: true,\r\n      status: {\r\n        size: 0,\r\n        currentThreads: 0,\r\n        progress: 0,\r\n      },\r\n    \r\n    };\r\n  },\r\n  methods: {\r\n    sendMessage() {\r\n      if (this.keyword) {\r\n        const socket = new WebSocket(\"ws://localhost:3000/keywords\");\r\n        socket.addEventListener(\"open\", () => {\r\n          socket.send(this.keyword);\r\n          this.notFound = true;\r\n          this.response = [];\r\n        });\r\n\r\n        socket.addEventListener(\"message\", (event) => {\r\n   \r\n          const data = JSON.parse(event.data);\r\n         \r\n          if (data.length === '') {\r\n            this.notFound = true;\r\n            this.response = [];\r\n           \r\n          } else {\r\n            this.notFound = false;\r\n            this.response = data;\r\n         \r\n          }\r\n\r\n          socket.close();\r\n        });\r\n        socket.addEventListener(\"error\", () => {\r\n          \r\n          console.log('Ошибка соеденения'); // Вывод в консоль при ошибке соединения\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>"],"mappings":";gCAGMA,mBAAA,CAAuB,WAApB,kBAAgB;;;;;gCAUjBA,mBAAA,CAAwB,WAArB,mBAAiB;;;;;gCAMpBA,mBAAA,CAA0B,YAAtB,mBAAiB;oBAArBC,UAA0B,C;;uBAlBhCC,mBAAA,CAqBM,cApBJF,mBAAA,CAKM,cAJJG,UAAuB,EACvBH,mBAAA,CAAgC,WAA7B,UAAQ,GAAAI,gBAAA,CAAGC,KAAA,CAAAC,MAAM,CAACC,IAAI,kBACzBP,mBAAA,CAAiE,WAA9D,iCAA+B,GAAAI,gBAAA,CAAGC,KAAA,CAAAC,MAAM,CAACE,cAAc,kBAC1DR,mBAAA,CAAgD,WAA7C,qBAAmB,GAAAI,gBAAA,CAAGC,KAAA,CAAAC,MAAM,CAACG,QAAQ,IAAG,GAAC,gB,mBAE9CT,mBAAA,CAAkE;+DAAlDK,KAAA,CAAAK,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBP,KAAA,CAAAK,OAAO,E,GACvBV,mBAAA,CAAoE;IAA3Da,QAAQ,GAAGR,KAAA,CAAAK,OAAO;IAAGI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,WAAS,iBAAAG,UAAA,GAE3DnB,mBAAA,CAUM,cATMK,KAAA,CAAAe,QAAQ,CAACC,MAAM,Q,cAAzBnB,mBAAA,CAKK,MAAAoB,UAAA,GAJHC,UAAwB,G,kBACxBrB,mBAAA,CAEKsB,SAAA,QAAAC,WAAA,CAFsBpB,KAAA,CAAAe,QAAQ,GAAvBM,GAAG,EAAEC,KAAK;yBAAtBzB,mBAAA,CAEK;MAFiC0B,GAAG,EAAED;IAAK,IAC9C3B,mBAAA,CAAwC;MAApC6B,IAAI,cAAcH;wBAAQA,GAAG,wBAAAI,UAAA,E;yEAG3BzB,KAAA,CAAA0B,QAAQ,I,cAAlB7B,mBAAA,CAEK,MAAA8B,UAAA,EAAAC,UAAA,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}