{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode } from \"vue\";\nconst _hoisted_1 = [\"disabled\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"href\"];\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = [\"href\"];\nconst _hoisted_10 = {\n  key: 0\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Выбранный контент:\", -1 /* HOISTED */);\nconst _hoisted_12 = [\"href\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.keyword = $event),\n    placeholder: \"Введите ключ (например, 1)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.keyword]]), _createElementVNode(\"button\", {\n    disabled: !$data.keyword,\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"Отправить\", 8 /* PROPS */, _hoisted_1), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [$data.contentList.length === 0 ? (_openBlock(), _createElementBlock(\"p\", _hoisted_2, \"нет контента\")) : _createCommentVNode(\"v-if\", true), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.contentList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"div\", null, [_createElementVNode(\"a\", {\n      target: \"_blank\",\n      href: item\n    }, _toDisplayString(item), 9 /* TEXT, PROPS */, _hoisted_3), _createElementVNode(\"button\", {\n      onClick: $event => $options.downloadFile(index)\n    }, \"Скачать\", 8 /* PROPS */, _hoisted_4), item.isDownloading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_createTextVNode(\" Размер: \" + _toDisplayString(item.status.size) + \" bytes\", 1 /* TEXT */), _hoisted_6, _createTextVNode(\" Кол-во запущенных потоков: \" + _toDisplayString(item.status.currentThreads), 1 /* TEXT */), _hoisted_7, _createTextVNode(\" Количечество памяти на поток: \" + _toDisplayString($data.byteLimitPerSecond) + \" \", 1 /* TEXT */), _hoisted_8, _createTextVNode(\" Прогресс загрузки: \" + _toDisplayString(item.status.progress) + \"% \", 1 /* TEXT */), _createElementVNode(\"a\", {\n      href: item.downloadLink,\n      download: \"\"\n    }, \"Скачать файл\", 8 /* PROPS */, _hoisted_9)])) : _createCommentVNode(\"v-if\", true)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.selectedContent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_hoisted_11, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.selectedContent, (url, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"a\", {\n      target: \"_blank\",\n      href: url\n    }, _toDisplayString(url), 9 /* TEXT, PROPS */, _hoisted_12)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","$data","keyword","$event","placeholder","disabled","onClick","_cache","args","$options","sendMessage","_hoisted_1","contentList","length","_hoisted_2","_Fragment","_renderList","item","index","key","target","href","_hoisted_3","downloadFile","_hoisted_4","isDownloading","_hoisted_5","_toDisplayString","status","size","_hoisted_6","currentThreads","_hoisted_7","byteLimitPerSecond","_hoisted_8","progress","downloadLink","download","_hoisted_9","selectedContent","_hoisted_10","_hoisted_11","url","_hoisted_12"],"sources":["C:\\std\\vue-nest-http-websocket\\src\\components\\SocetClient.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <input v-model=\"keyword\" placeholder=\"Введите ключ (например, 1)\">\r\n    <button :disabled=\"!keyword\" @click=\"sendMessage\">Отправить</button>\r\n    <div>\r\n      <ul>\r\n        <p v-if=\"contentList.length === 0\">нет контента</p>\r\n        <li v-for=\"(item, index) in contentList\" :key=\"index\">\r\n          <div>\r\n            <a target=\"_blank\" :href=\"item\">{{ item }}</a>\r\n            <button @click=\"downloadFile(index)\">Скачать</button>\r\n            <div v-if=\"item.isDownloading\">\r\n              Размер: {{ item.status.size }} bytes<br>\r\n              Кол-во запущенных потоков: {{ item.status.currentThreads }}<br>\r\n              Количечество памяти на поток: {{ byteLimitPerSecond }} <br>\r\n              Прогресс загрузки: {{ item.status.progress }}%\r\n              <a :href=\"item.downloadLink\" download>Скачать файл</a>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div v-if=\"selectedContent\">\r\n      <h2>Выбранный контент:</h2>\r\n      <ul>\r\n        <li v-for=\"(url, index) in selectedContent\" :key=\"index\">\r\n          <a target=\"_blank\" :href=\"url\">{{ url }}</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      keyword: \"\",\r\n      status: {\r\n        size: 0,\r\n        currentThreads: 0,\r\n        progress: 0,\r\n      },\r\n      contentList: [],\r\n      selectedContent: null,\r\n      downloadLimit: null,\r\n      byteLimitPerSecond: null,\r\n    };\r\n  },\r\n  created() {\r\n    // Запрос для получения downloadLimit\r\n    fetch('http://localhost:3000/config/download-limit')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.downloadLimit = data.downloadLimit;\r\n        // Теперь вы можете использовать this.downloadLimit в вашем компоненте\r\n      });\r\n\r\n    // Запрос для получения byteLimitPerSecond\r\n    fetch('http://localhost:3000/config/byte-limit-per-second')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        this.byteLimitPerSecond = data.byteLimitPerSecond;\r\n        // Теперь вы можете использовать this.byteLimitPerSecond в вашем компоненте\r\n      });\r\n  },\r\n  methods: {\r\n    async downloadFile(index) {\r\n      try {\r\n        const url = this.contentList[index].url; // Получаем URL из contentList по индексу\r\n        const response = await fetch(`http://localhost:3000/download/${encodeURIComponent(url)}`, {\r\n          method: 'GET',\r\n        });\r\n\r\n        if (response.status === 200) {\r\n          const blob = await response.blob();\r\n          const fileURL = window.URL.createObjectURL(blob);\r\n\r\n          const status = {\r\n            size: blob.size,\r\n            currentThreads: this.downloadLimit,\r\n            progress: 100, // Считаем, что загрузка завершена\r\n          };\r\n\r\n          // Обновляем свойства элемента в contentList\r\n          this.$set(this.contentList, index, {\r\n            ...this.contentList[index],\r\n            status,\r\n            isDownloading: true,\r\n            downloadLink: fileURL,\r\n          });\r\n        } else {\r\n          console.error('Ошибка скачивания файла');\r\n        }\r\n      } catch (error) {\r\n        console.error(`Произошла ошибка: ${error}`);\r\n      }\r\n    },\r\n\r\n    sendMessage() {\r\n      if (this.keyword) {\r\n        const socket = new WebSocket(\"ws://localhost:3000/keywords\");\r\n        socket.addEventListener(\"open\", () => {\r\n          socket.send(this.keyword);\r\n          this.contentList = [];\r\n        });\r\n\r\n        socket.addEventListener(\"message\", (event) => {\r\n          const data = JSON.parse(event.data);\r\n          console.log(\"Получены данные от сервера:\", data);\r\n\r\n          if (Array.isArray(data) && data.length > 0) {\r\n            this.status = {\r\n              size: data[0].size,\r\n              currentThreads: data[0].currentThreads,\r\n              progress: data[0].progress,\r\n            };\r\n            this.contentList = data;\r\n          } else {\r\n            this.status = {\r\n              size: 0,\r\n              currentThreads: 0,\r\n              progress: 0,\r\n            };\r\n            this.contentList = [];\r\n          }\r\n        });\r\n\r\n        socket.addEventListener(\"error\", () => {\r\n          console.log(\"Ошибка соединения\");\r\n        });\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;;;gCAYkDA,mBAAA,CAAI;gCACmBA,mBAAA,CAAI;gCACRA,mBAAA,CAAI;;;;;iCASnEA,mBAAA,CAA2B,YAAvB,oBAAkB;;;uBAtB1BC,mBAAA,CA6BM,c,gBA5BJD,mBAAA,CAAkE;+DAAlDE,KAAA,CAAAC,OAAO,GAAAC,MAAA;IAAEC,WAAW,EAAC;iDAArBH,KAAA,CAAAC,OAAO,E,GACvBH,mBAAA,CAAoE;IAA3DM,QAAQ,GAAGJ,KAAA,CAAAC,OAAO;IAAGI,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,WAAS,iBAAAG,UAAA,GAC3DZ,mBAAA,CAiBM,cAhBJA,mBAAA,CAeK,aAdME,KAAA,CAAAW,WAAW,CAACC,MAAM,U,cAA3Bb,mBAAA,CAAmD,KAAAc,UAAA,EAAhB,cAAY,K,sDAC/Cd,mBAAA,CAYKe,SAAA,QAAAC,WAAA,CAZuBf,KAAA,CAAAW,WAAW,GAA3BK,IAAI,EAAEC,KAAK;yBAAvBlB,mBAAA,CAYK;MAZqCmB,GAAG,EAAED;IAAK,IAClDnB,mBAAA,CAUM,cATJA,mBAAA,CAA8C;MAA3CqB,MAAM,EAAC,QAAQ;MAAEC,IAAI,EAAEJ;wBAASA,IAAI,wBAAAK,UAAA,GACvCvB,mBAAA,CAAqD;MAA5CO,OAAK,EAAAH,MAAA,IAAEM,QAAA,CAAAc,YAAY,CAACL,KAAK;OAAG,SAAO,iBAAAM,UAAA,GACjCP,IAAI,CAACQ,aAAa,I,cAA7BzB,mBAAA,CAMM,OAAA0B,UAAA,G,iBANyB,WACrB,GAAAC,gBAAA,CAAGV,IAAI,CAACW,MAAM,CAACC,IAAI,IAAG,QAAM,iBAAAC,UAAI,E,iBAAA,8BACb,GAAAH,gBAAA,CAAGV,IAAI,CAACW,MAAM,CAACG,cAAc,kBAAGC,UAAI,E,iBAAA,iCACjC,GAAAL,gBAAA,CAAG1B,KAAA,CAAAgC,kBAAkB,IAAG,GAAC,iBAAAC,UAAI,E,iBAAA,sBACxC,GAAAP,gBAAA,CAAGV,IAAI,CAACW,MAAM,CAACO,QAAQ,IAAG,IAC7C,iBAAApC,mBAAA,CAAsD;MAAlDsB,IAAI,EAAEJ,IAAI,CAACmB,YAAY;MAAEC,QAAQ,EAAR;OAAS,cAAY,iBAAAC,UAAA,E;sCAMjDrC,KAAA,CAAAsC,eAAe,I,cAA1BvC,mBAAA,CAOM,OAAAwC,WAAA,GANJC,WAA2B,EAC3B1C,mBAAA,CAIK,c,kBAHHC,mBAAA,CAEKe,SAAA,QAAAC,WAAA,CAFsBf,KAAA,CAAAsC,eAAe,GAA9BG,GAAG,EAAExB,KAAK;yBAAtBlB,mBAAA,CAEK;MAFwCmB,GAAG,EAAED;IAAK,IACrDnB,mBAAA,CAA4C;MAAzCqB,MAAM,EAAC,QAAQ;MAAEC,IAAI,EAAEqB;wBAAQA,GAAG,wBAAAC,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}